# -*- coding: utf-8 -*-
"""DBMS project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jeZPYBZqHKGZTmUzKbAaAP-_Kd7-FIuM
"""

import sqlite3

def create_connection(db_file):
    conn = None
    try:
        conn = sqlite3.connect(db_file)
        print(f"Connected to {db_file} successfully.")
    except sqlite3.Error as e:
        print(e)
    return conn

def create_table(conn):
    try:
        sql_create_table = """CREATE TABLE IF NOT EXISTS users (
                                id integer PRIMARY KEY,
                                name text NOT NULL,
                                age integer,
                                email text
                              );"""
        cursor = conn.cursor()
        cursor.execute(sql_create_table)
        print("Table created successfully.")
    except sqlite3.Error as e:
        print(e)

def main():
    database = "users.db"
    conn = create_connection(database)
    if conn:
        create_table(conn)
        conn.close()

if __name__ == '__main__':
    main()

def insert_user(conn, user):
    sql = '''INSERT INTO users(name, age, email)
             VALUES(?, ?, ?)'''
    cursor = conn.cursor()
    cursor.execute(sql, user)
    conn.commit()
    return cursor.lastrowid

def select_all_users(conn):
    sql = '''SELECT * FROM users'''
    cursor = conn.cursor()
    cursor.execute(sql)
    rows = cursor.fetchall()
    for row in rows:
        print(row)

def update_user(conn, user):
    sql = '''UPDATE users
             SET name = ?,
                 age = ?,
                 email = ?
             WHERE id = ?'''
    cursor = conn.cursor()
    cursor.execute(sql, user)
    conn.commit()

def delete_user(conn, id):
    sql = '''DELETE FROM users WHERE id = ?'''
    cursor = conn.cursor()
    cursor.execute(sql, (id,))
    conn.commit()

def main():
    database = "users.db"
    conn = create_connection(database)
    if conn:
        # Insert a new user
        user = ('John Doe', 25, 'john.doe@example.com')
        user_id = insert_user(conn, user)

        # Select all users
        print("All users:")
        select_all_users(conn)

        # Update user
        updated_user = ('John Doe', 26, 'john.doe@example.com', user_id)
        update_user(conn, updated_user)

        # Select all users after update
        print("All users after update:")
        select_all_users(conn)

        # Delete user
        delete_user(conn, user_id)

        # Select all users after delete
        print("All users after delete:")
        select_all_users(conn)

        conn.close()

if __name__ == '__main__':
    main()